name: "Destroy"
on:
  workflow_dispatch:

jobs:
  destroy:
    name: "Destroy"
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        # with:
        #   # terraform_version: 1.4.2
        #   cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      # - name: Terraform Format
      #   id: fmt
      #   run: terraform fmt -check

      - name: Terraform Init
        id: init
        run: terraform init -reconfigure
      
      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform Plan destroy
        id: plan
        if: github.ref == 'refs/heads/main'
        run: | 
          terraform plan -destroy -no-color -input=false \
          -var="aws_access_key=${{ secrets.AWS_ACCESS_KEY_ID }}" \
          -var="aws_secret_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}" \
          -var="aws_session_token=${{ secrets.AWS_SESSION_TOKEN }}" \
     

      - name: Terraform apply destroy
        if: github.ref == 'refs/heads/main'
        run: |
          terraform apply -destroy -auto-approve -input=false \
          -var="aws_access_key=${{ secrets.AWS_ACCESS_KEY_ID }}" \
          -var="aws_secret_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}" \
          -var="aws_session_token=${{ secrets.AWS_SESSION_TOKEN }}" \